name: Smoke test

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:


jobs:

  setup-database:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Initialize database
        id: initialize-database
        run: |
          python resources/create_test_cluster.py --password="${{ secrets.CLUSTER_PASSWORD }}" --token="${{ secrets.CLUSTER_API_KEY }}" --init-sql resources/test.sql --output=github --expires=2h "singlestore-python - $GITHUB_WORKFLOW"
        env:
          PYTHONPATH: ${{ github.workspace }}

    outputs:
      cluster-id: ${{ steps.initialize-database.outputs.cluster-id }}
      cluster-host: ${{ steps.initialize-database.outputs.cluster-host }}


  smoke-test:
    needs: setup-database

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        driver:
          - cymysql
          - pymysql
          - mysqldb
#         - http
        # Manually include a couple of runs on Mac & Windows
        include:
          - os: macos-latest
            python-version: "3.10"
            driver: cymysql
#         - os: macos-latest
#           python-version: "3.10"
#           driver: http
          - os: windows-latest
            python-version: "3.10"
            driver: cymysql
#         - os: windows-latest
#           python-version: "3.10"
#           driver: http

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install MySQL libraries
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          # brew update
          brew install mysql

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test-requirements.txt

      - name: Install SingleStore package
        run: |
          python setup.py install

      - name: Run tests
        if: ${{ matrix.driver != 'http' }}
        run: nose2 -v singlestore.tests.test_basics
        env:
          SINGLESTORE_URL: "${{ matrix.driver }}://${{ secrets.CLUSTER_USER }}:${{ secrets.CLUSTER_PASSWORD }}@${{ needs.setup-database.outputs.cluster-host }}:3306/app"

      - name: Run tests
        if: ${{ matrix.driver == 'http' }}
        run: nose2 -v singlestore.tests.test_basics
        env:
          SINGLESTORE_URL: "${{ matrix.driver }}://${{ secrets.CLUSTER_USER }}:${{ secrets.CLUSTER_PASSWORD }}@${{ needs.setup-database.outputs.cluster-host }}:9000/app"


  shutdown-database:
    needs: [setup-database, smoke-test]
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      # Just use curl here so we don't have to check out the package source again.
      - name: Shutdown database
        run: |
          curl -H "Accept: application/json" -H "Authorization: Bearer ${{ secrets.CLUSTER_API_KEY }}" -X DELETE "https://api.singlestore.com/v0beta/clusters/${{ env.CLUSTER_ID }}"
        env:
          CLUSTER_ID: ${{ needs.setup-database.outputs.cluster-id }}
