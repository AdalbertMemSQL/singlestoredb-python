
name: Publish packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_pypi:
        description: "Publish PyPI packages on success?"
        required: true
        type: boolean
        default: true
#     publish_anaconda:
#       description: "Publish Anaconda packages on success?"
#       required: true
#       type: boolean
#       default: true
      build_number:
        description: "Package build number"
        required: true
        type: string
        default: 0

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
          - windows-latest
        python-version:
          - "3.10"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test-requirements.txt

      - name: Build source dist
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          python -m build --sdist

      - name: Build wheel
        run: |
          python -m build --wheel

#     - name: Build conda
#       if: ${{ matrix.os != 'windows-latest' }}
#       run: |
#         # $CONDA is an environment variable pointing to the root of the miniconda directory
#         echo $CONDA/bin >> $GITHUB_PATH
#         conda update conda
#         conda install conda-build anaconda-client conda-verify
#         mkdir conda-bld
#         cd conda.recipe
#         conda build -c singlestore -c conda-forge --output-folder ../conda-bld --no-test --no-anaconda-upload .

#     - name: Build conda (Windows)
#       if: ${{ matrix.os == 'windows-latest' }}
#       run: |
#         C:\Miniconda\condabin\conda.bat update conda
#         C:\Miniconda\condabin\conda.bat install conda-build anaconda-client conda-verify
#         mkdir conda-bld
#         cd conda.recipe
#         C:\Miniconda\condabin\conda.bat build -c singlestore -c conda-forge --output-folder ../conda-bld --no-test --no-anaconda-upload .
#

      - name: Archive source dist and wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheel-${{ matrix.os }}
          path: |
            dist

#    - name: Archive conda
#       uses: actions/upload-artifact@v3
#       with:
#         name: conda-${{ matrix.os }}
#         path: |
#           conda-bld/*

  test:
    needs: build

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
          - windows-latest
        python-version:
          - "3.10"

    steps:
      - name: Dummy requirements
        run: |
          touch requirements.txt

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Download wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel-${{ matrix.os }}
          path: |
            dist

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install --no-index -f ./dist/ singlestoredb

#     - name: Run smoke tests
#       run: |
#         pip install pytest
#         pytest -q singlestoredb/tests/test_basics.py
#       env:
#         SINGLESTOREDB_PURE_PYTHON=0

  publish:
    needs: test

    runs-on: ubuntu-20.04

    steps:
      - name: Download Windows wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel-windows-latest
          path: |
            dist

      - name: Download Mac wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel-macos-latest
          path: |
            dist

      - name: Download Linux wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel-ubuntu-20.04
          path: |
            dist

      - name: Publish PyPI package
        if: ${{ github.event_name == 'release' || github.event.inputs.publish_pypi == 'true' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: "${{ secrets.PYPI_TOKEN }}"
        run: |
          ls dist/*
#         twine upload dist/*

#     - name: Publish Conda package
#       if: ${{ github.event_name == 'release' || github.event.inputs.publish_anaconda == 'true' }}
#       env:
#         PACKAGE_BUILD_NUMBER: ${{ github.event.inputs.build_number }}
#       run: |
#         echo $CONDA/bin >> $GITHUB_PATH
#         anaconda -t "${{ secrets.ANACONDA_TOKEN }}" upload --no-progress --user SingleStore --label main conda-bld/*/singlestoredb-*.tar.bz2
#
